import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { remark } from "remark";
import html from "remark-html";
import { getAllPosts, getPostBySlug } from "../libs/markdownPosts";
import { PageLayout } from "../components/Layouts/PageLayout";

const Home: NextPage = (props) => {
  return (
    <PageLayout title="stripe-element Home">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="ion-padding">
        {(props as any).posts.map((post: any) => {
          return (
            <Link href={`/${post.slug}`} passHref key={post.title}>
              <a>{post.title}</a>
            </Link>
          );
        })}
      </main>
    </PageLayout>
  );
};

export default Home;

const markdownToHtml = async (markdown: string) => {
  const result = await remark().use(html).process(markdown);
  return result.toString();
};

export const getStaticProps: GetStaticProps = async () => {
  const postSlugs = getAllPosts();
  const posts = await Promise.all(
    postSlugs.map(async (slug) => {
      const post = getPostBySlug(slug, ["date", "title", "content"]);
      return {
        slug: Array.isArray(slug) ? slug.join("/") : slug,
        ...post,
        content: await markdownToHtml(post.content as any),
      };
    })
  );
  console.log(posts);

  return {
    props: {
      posts,
    },
  };
};
